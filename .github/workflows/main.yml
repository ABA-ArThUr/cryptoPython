name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test_build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build project
        run: |
          echo "Compilation du programme!!"
          g++ -c hello.cpp -o hello.o
          g++ -c main.cpp -o main.o
          g++ main.o hello.o -o monprog

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: |
            monprog
            hello.o

  dockerize_and_deploy:
    name: Build Docker image and deploy
    needs: test_build
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/monprog:${{ github.sha }}
          echo "Building Docker image: $IMAGE_NAME"

          # Crée un Dockerfile si nécessaire
          cat > Dockerfile <<'EOF'
          FROM ubuntu:22.04
          WORKDIR /app
          COPY monprog .
          RUN chmod +x monprog
          CMD ["./monprog"]
          EOF

          docker build -t $IMAGE_NAME .
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Push Docker image
        run: docker push $IMAGE_NAME

      - name: Deploy container
        run: |
          echo "Déploiement du conteneur..."
          docker stop monprog || true
          docker rm monprog || true
          docker run -d --name monprog -p 8080:8080 $IMAGE_NAME
